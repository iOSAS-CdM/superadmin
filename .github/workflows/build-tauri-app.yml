name: Build Tauri App

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  release:
    types: [created]

jobs:
  build-tauri:
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-latest, ubuntu-latest, windows-latest]

    runs-on: ${{ matrix.platform }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          target: ${{ matrix.platform == 'macos-latest' && 'x86_64-apple-darwin' || matrix.platform == 'ubuntu-latest' && 'x86_64-unknown-linux-gnu' || 'x86_64-pc-windows-msvc' }}
          components: rustfmt, clippy
          targets: |
            x86_64-apple-darwin
            x86_64-unknown-linux-gnu
            x86_64-pc-windows-msvc

      - name: Install dependencies (Linux)
        if: matrix.platform == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf

      - name: Install frontend dependencies
        run: npm install

      - name: Build Tauri app
        run: npm run tauri build

      - name: Upload artifact (macOS)
        if: matrix.platform == 'macos-latest'
        uses: actions/upload-artifact@v4
        with:
          name: tauri-app-macos
          path: src-tauri/target/release/bundle/dmg/*.dmg

      - name: Upload artifact (Windows)
        if: matrix.platform == 'windows-latest'
        uses: actions/upload-artifact@v4
        with:
          name: tauri-app-windows
          path: src-tauri/target/release/bundle/msi/*.msi

      - name: Upload artifact (Linux)
        if: matrix.platform == 'ubuntu-latest'
        uses: actions/upload-artifact@v4
        with:
          name: tauri-app-linux
          path: src-tauri/target/release/bundle/deb/*.deb
          
      - name: Upload release asset
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/') # Only upload if triggered by a tag (release)
        with:
          files: |
            src-tauri/target/release/bundle/dmg/*.dmg
            src-tauri/target/release/bundle/msi/*.msi
            src-tauri/target/release/bundle/deb/*.deb
          name: ${{ github.event.release.name || github.ref_name }}
          tag_name: ${{ github.ref }}
          body: ${{ github.event.release.body }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is automatically provided by GitHub Actions
